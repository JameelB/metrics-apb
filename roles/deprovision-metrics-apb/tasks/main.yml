- name: Delete all prometheus resources by app label (limited to buildconfig,deploymentconfig,service,imagestream,route and pod)
  shell: oc delete all -l app=prometheus -n '{{ namespace }}'

- name: Delete all grafana resources by app label (limited to buildconfig,deploymentconfig,service,imagestream,route and pod)
  shell: oc delete all -l app=grafana -n '{{ namespace }}'

- name: Delete all aerogear-app-metrics resources by app label (limited to buildconfig,deploymentconfig,service,imagestream,route and pod)
  shell: oc delete all -l app=aerogear-app-metrics -n '{{ namespace }}'

- name: Delete all postgres resources by app label (limited to buildconfig,deploymentconfig,service,imagestream,route and pod)
  shell: oc delete all -l app=postgres -n '{{ namespace }}'

- k8s_v1_secret:
    name: '{{ prometheus_secret_name }}'
    namespace: '{{ namespace }}'
    state: absent

- k8s_v1_config_map:
    name: '{{ prometheus_configmap_name }}'
    namespace: '{{ namespace }}'
    state: absent

- k8s_v1_config_map:
    name: '{{ grafana_ini_configmap_name }}'
    namespace: '{{ namespace }}'
    state: absent

- k8s_v1_config_map:
    name: '{{ grafana_datasources_configmap_name }}'
    namespace: '{{ namespace }}'
    state: absent

- k8s_v1_config_map:
    name: '{{ grafana_dashboards_configmap_name }}'
    namespace: '{{ namespace }}'
    state: absent

- k8s_v1_config_map:
    name: grafana-dashboards-providers-configmap
    namespace: '{{ namespace }}'
    state: absent

- k8s_v1_config_map:
    name: metrics
    namespace: '{{ namespace }}'
    state: absent

- k8s_v1_service_account:
    name: '{{ proxy_serviceaccount_name }}'
    namespace: '{{ namespace }}'
    state: absent

- name: Prometheus PVC
  k8s_v1_persistent_volume_claim:
    name: '{{ prometheus_claim_name}}'
    namespace: "{{ namespace }}"
    state: absent

- name: Grafana PVC
  k8s_v1_persistent_volume_claim:
    name: '{{ grafana_claim_name}}'
    namespace: "{{ namespace }}"
    state: absent

- name: Postgres PVC
  k8s_v1_persistent_volume_claim:
    name: '{{ postgres_claim_name}}'
    namespace: "{{ namespace }}"
    state: absent